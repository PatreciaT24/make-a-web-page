<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" type="text/css" href="style.css">
  <title>Intro to Programming</title>
</head>
<body>
  <h1>Intro to Programming Notes</h1>
<div class="Lesson">
  <h2>Lesson 1: The Basics of the Web & HTML</h2>
    <div class="concept">
    	<div class="concept-title">
    <b>Facts about the World Wide Web</b>
</div>
<div class="concept-description">
	<p>
      The web is a collection of <b>HTML</b> documents (hypertext markup language). The web was invented in early 1990s and has 30+ billion pages. The main components of the web are the user, personal computer + a browser, the internet and servers. A web browser makes requests via the internet to servers using HTTP (main protocol of the web), and the servers respond with files that your browser displays.
     </p>
     <p>
    <b>Some tips and reminders:</b>
      <br>*HTML tags are kept within brackets and consist of the opening tag, and closing tag (unless it's a VOID tag).
      <br>*The whole tag is called an element (what's inside the opening and closing tags).
      <br>*When entering text in whitespace, HTML will enter it all on one line even if entered with multiple lines and spaces.
      <br> *Computers give programmers power by using technological empathy and learning how to "speak to them" in order to get them to do what you want.
      <br> *Even the best programmers make mistakes and forget ALL the details when coding, so take a breath and have fun!
      <br>*HTML elements are either inline or block.
     </p>
  </div>
</div>

  <div class="Lesson">
	<h2>Lesson 2: Creating a Structured Document with HTML</h2>
	<div class="concept">
    	<div class="concept-title">
    <b>Facts about HTML and HTML Structure</b>
 	</div>
<div class="concept-description">
	<p>
    There are many programming languages, and all have different purposes when creating a website. For this nanodegree we are focusing on HTML and CSS. All languages have their own syntax and rules.
    </p>
    <p>
    <b>HTML:</b> Otherwise known as Hypertext markup language is the standard markup language used to create web pages. It defines the structure and content of the page. When HTML is entered the browser turns HTML tags into elements that forms a tree like structure which is referred to as DOM (document object model).
    </p>
    <p>
    <b>DOM:</b>Document object model is the standard convention for representing and interacting with elements in HTML. Each HTML tag creates an element in the DOM that the browser uses to display the page. Each tag has an associated name or type that defines what kind of element is created (paragraph, image, document division for example). 
    </p>
    <p>
    <b>CSS:</b> THe language that controls the style of your page. It allows you to change things like the color, walls, fonts, background, borders and position of your elements. Once you understand the language you can easily look at HTML code to understand how a page is organized. 
    </p>
    <p>
    <b>Boxifying Designs:</b> Boxes exist around every visual element. When you think about the structure of a page and learn to literally box items together, you are using technological empathy because that is how a browser sees HTML. The browser sees boxes within boxes within boxes, similar to a grid. Its best to use placeholder content to allow you to easily remember which boxes each tag refers to. 
    Another cool concept is that you can view the HTML structure of a page (not the actual code) as the browser interprets it by going to tools and then developer tools in your internet browser. You can also see the style elements that were applied. You can go deep enough to see the actual text that you see on the page. 
    </p>
  </div>
 </div>

  <div class="Lesson">
  <h2>Lesson 3: Adding CSS Style to HTML Structure</h2>
  <div class="concept">
    	<div class="concept-title">
    <b>Facts about CSS</b>
    </div>
<div class="concept-description">
	<p>
    	Most important ideas in programming is not to repeat yourself! CSS allows programmers to avoid repetition. CSS stands for Cascading Style sheets. Cascading being the most important aspect which allow requires abstract thinking. Inheritance is a key feature in CSS. Its the mechanism by which properties are applied to a specified element as well as its descendants. Inheritance relies on the DOM. This ability allows web pages to load faster and saves clients money on bandwidth and development costs. 
    </p>
    <p>
    	*Descendant properties that can be inherited are text related properties such as font, letter spacing, line height, list style, text alignment, visibility, white space and word spacing.
    </p>
    <p>
    	*Descendant properties that can NOT be inherited are box related properties such as background, border, display, float and clear, height & width, margin, overflow, padding, text decoration, vertical align and z index.
	</p> 
</div>
</body>
</html>